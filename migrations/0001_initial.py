# Generated by Django 5.1.7 on 2025-03-09 23:28

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_id', models.CharField(default='CL-001', editable=False, max_length=10, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('company_name', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.TextField()),
                ('phone_number', models.CharField(max_length=20)),
                ('commercial_reg_number', models.CharField(blank=True, max_length=50, null=True)),
                ('bank_account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_id', models.CharField(default='DR-001', editable=False, max_length=10, unique=True)),
                ('name', models.CharField(default='', max_length=200, verbose_name='إسم السائق')),
                ('id_number', models.CharField(default='', max_length=20, verbose_name='رقم البطاقة')),
                ('address', models.TextField(default='', verbose_name='العنوان')),
                ('phone_number', models.CharField(default='', max_length=11, validators=[django.core.validators.RegexValidator(message='رقم الهاتف يجب أن يكون بصيغة أرقام مصرية (مثال: 01012345678)', regex='^01[0125][0-9]{8}$')], verbose_name='رقم التليفون')),
                ('license_number', models.CharField(max_length=20, verbose_name='رقم الرخصة')),
                ('license_type', models.CharField(choices=[('first', 'أولى'), ('second', 'ثانية'), ('third', 'ثالثة')], default='first', max_length=10, verbose_name='نوع الرخصة')),
                ('license_expiry_date', models.DateField(blank=True, null=True, verbose_name='تاريخ انتهاء الرخصة')),
                ('vehicle_number', models.CharField(default='', max_length=20, verbose_name='رقم السيارة')),
                ('vehicle_type', models.CharField(default='', max_length=50, verbose_name='نوع السيارة')),
                ('hire_date', models.DateField(auto_now_add=True, verbose_name='تاريخ التعيين')),
            ],
        ),
        migrations.CreateModel(
            name='OilType',
            fields=[
                ('id', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('properties', models.TextField()),
                ('notes', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('user', 'Regular User'), ('client_manager', 'مدير العملاء'), ('vehicle_manager', 'مدير المركبات'), ('transaction_manager', 'مدير المعاملات'), ('reports_viewer', 'مشاهد التقارير')], default='user', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=100)),
                ('details', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BalanceChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('new_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('change_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='balance_logs', to='accounts.client')),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BU_ID', models.CharField(default='BU-001', editable=False, max_length=20, unique=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, editable=False, max_digits=15)),
                ('loading_location', models.CharField(max_length=200)),
                ('unloading_location', models.CharField(max_length=200)),
                ('vehicle', models.CharField(blank=True, default='', editable=False, max_length=20, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.client')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.driver')),
                ('oil_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.oiltype')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, editable=False, max_digits=15)),
                ('loading_location', models.CharField(max_length=200)),
                ('unloading_location', models.CharField(max_length=200)),
                ('vehicle', models.CharField(blank=True, default='', editable=False, max_length=20, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='pending', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.client')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.driver')),
                ('oil_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.oiltype')),
            ],
            options={
                'verbose_name': 'عملية بيع',
                'verbose_name_plural': 'عمليات البيع',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('paid', 'Paid'), ('pending', 'Pending'), ('overdue', 'Overdue')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.client')),
                ('driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='accounts.driver')),
            ],
        ),
        migrations.CreateModel(
            name='Treasury',
            fields=[
                ('movement_id', models.AutoField(default=1, primary_key=True, serialize=False, verbose_name='رقم الحركة')),
                ('date', models.DateField(auto_now_add=True, verbose_name='التاريخ')),
                ('amount', models.DecimalField(decimal_places=3, max_digits=15)),
                ('description', models.TextField()),
                ('transaction_type', models.CharField(choices=[('income', 'إيراد'), ('expense', 'مصروف')], max_length=7)),
                ('movement_source', models.CharField(choices=[('client_account', 'من حساب العميل'), ('company_account', 'من حساب الشركة'), ('driver_account', 'من حساب السائق')], default='client_account', max_length=20)),
                ('payment_method', models.CharField(choices=[('cash', 'نقدي'), ('check', 'شيك'), ('bank_transfer', 'تحويل بنكي'), ('other', 'أخرى')], default='cash', max_length=15)),
                ('payment_details', models.CharField(blank=True, max_length=100, null=True)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=15, null=True)),
                ('oil_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.oiltype')),
                ('related_driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treasury_movements', to='accounts.driver')),
                ('related_purchase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treasury_movements', to='accounts.purchase')),
                ('related_sale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.sale')),
            ],
        ),
        migrations.AddField(
            model_name='purchase',
            name='treasury',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.treasury'),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plate_number', models.CharField(max_length=20, unique=True)),
                ('oil_capacity', models.PositiveIntegerField(help_text='Capacity in liters')),
                ('status', models.CharField(choices=[('active', 'Active'), ('maintenance', 'In Maintenance'), ('retired', 'Retired')], default='active', max_length=20)),
                ('purchase_date', models.DateField()),
                ('driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicles', to='accounts.driver')),
            ],
        ),
    ]
